<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://lilian.boulard.fr/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lilian.boulard.fr/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-11-22T15:51:29+00:00</updated><id>https://lilian.boulard.fr/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Building thy own cloud üè¥‚Äç‚ò†Ô∏è</title><link href="https://lilian.boulard.fr/blog/2023/my-cloud/" rel="alternate" type="text/html" title="Building thy own cloud üè¥‚Äç‚ò†Ô∏è"/><published>2023-11-05T13:57:00+00:00</published><updated>2023-11-05T13:57:00+00:00</updated><id>https://lilian.boulard.fr/blog/2023/my-cloud</id><content type="html" xml:base="https://lilian.boulard.fr/blog/2023/my-cloud/"><![CDATA[<p>In this little blog post, I‚Äôd like to reflect on the last few years and how I built my own cloud service. Today, it serves about a dozen users with services like file storage and sharing, streaming, a Stable Diffusion instance, a JupyterLab and a VPN. I also use it as a homelab.</p> <blockquote class="block-tip"> <p>For security reasons, I won‚Äôt get into too much details about the hardware and software. Hope you find this interesting anyway!</p> </blockquote> <h2 id="the-origins">The origins</h2> <p>The idea of a server started when I needed to upgrade my first PC, which I got in 2017: a pretty high-end computer at the time, packing a i5-6600K, a GTX 1070 and a whopping 16 GB of RAM. First thing I changed was the processor, in 2019: I opted for an AMD 3900X, which meant I had to also change the motherboard.</p> <p>Happy with this new investment and the power boost it gave my build, that also meant I had some components on my hands that I didn‚Äôt need.</p> <p>I could sell them, but at a fraction of their cost. So instead, borrowing some RAM and a power supply from the leftovers of my old <a href="https://lilian.boulard.fr/projects/sami/">mining rig</a>, I assembled another PC, which certainly didn‚Äôt pack a punch, but was enough to experiment a bit. I could leave scripts running for days on end, and play around with linux and some technologies I had an eye on for a while, such as Docker.</p> <p>This newfound knowledge enabled me to understand, design and setup an infrastructure: I opted for <a href="https://nextcloud.com/">Nextcloud</a>, a self-hosted cloud service. I also used <a href="https://en.wikipedia.org/wiki/Fail2ban">fail2ban</a> for bruteforce protection, and <a href="https://github.com/linuxserver/docker-swag">SWAG</a> as the reverse-proxy and SSL certificate manager.</p> <p>For the next years, when I upgraded a component in my main PC, I just put it back into the server, and like the ship of Theseus, one became the other.</p> <div class="row justify-content-center"> <div class="col-7 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/server-old-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/server-old-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/server-old-1400.webp"/> <img src="/assets/img/server-old.jpg" class="img-fluid" width="auto" height="auto" title="The old server" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The ship of Theseus (arguably ü§î) </div> <p>I was always very cautious about data integrity, with a pretty strong backup plan: the data was stored on two 2 TB SSDs, mirrored with RAID-1, with an off-site daily backup, and a monthly cold storage backup stored off-site. Solid!</p> <p>However, despite this, it was difficult to rollback files and settings, and I even lost a few files due to <a href="https://en.wikipedia.org/wiki/Data_degradation">bit rot</a> (which RAID1 doesn‚Äôt protect against). That‚Äôs when I really started to look into cleaner and more robust solutions. In 2023, I bought some serious hardware and revamped my infrastructure.</p> <h2 id="the-revamp">The revamp</h2> <p>Now we were talking: instead of 2 TB of usable RAID-1 storage, I now have 32 TB of raw storage, mirrored and stripped with ZFS (for a usable space of 16TB). Zooming in on that, I chose to invest in 4 8TB Seagate Exos: enterprise-grade HDDs designed to run non-stop. I also have a 18TB one, which is for raw, unsaved storage. The system is stored on a Sabrent top-of-the-line 2TB NVME, and another one is installed and used as an (arguably overkill) <a href="https://www.truenas.com/docs/references/l2arc/">L2ARC cache</a>.</p> <div class="row justify-content-sm-center"> <div class="col-sm-8 mt-2 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/server-new-w-old-gpu-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/server-new-w-old-gpu-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/server-new-w-old-gpu-1400.webp"/> <img src="/assets/img/server-new-w-old-gpu.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="View of the server's inside" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm-4 mt-2 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/server-bay-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/server-bay-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/server-bay-1400.webp"/> <img src="/assets/img/server-bay.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="A zoom on the disk bay" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> On the left, the side-view of the build ; on the right, a zoom on the disk bay. </div> <p>I also upgraded the GPU from the original 1070 8GB to a beafy 3090 24GB (more VRAM is better for AI stuff) for which I have applied brand new thermic paste. All that stuff got a high-quality air cooling system based on Noctua‚Äôs <a href="https://noctua.at/fr/nf-a12x25-pwm">NF-A12x25</a> for the case ‚Äì which is a gigantic <a href="https://www.fractal-design.com/products/cases/define/define-7-xl/black-solid/">Fractal Design Define 7 XL</a> ‚Äì and a <a href="https://noctua.at/fr/nh-d15.html">Noctua NH-D15</a> for the CPU. It gets cool in there üòé</p> <div class="row justify-content-center"> <div class="col-7 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/server-new-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/server-new-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/server-new-1400.webp"/> <img src="/assets/img/server-new.jpg" class="img-fluid" width="auto" height="auto" title="View of the final build's inside" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The final build, with the new GPU. </div> <p>In terms of software, the services are pretty much the same from the inception: a good ol‚Äô Debian for the OS, Docker to hold it all together, Nextcloud for the files ‚Äì fine-tuned for my users‚Äô needs ‚Äì, a reverse-proxy to serve my apps, secured with a bunch of middlewares and extra things for maximum security.</p> <h2 id="the-future">The future</h2> <p>Currently, the motherboard isn‚Äôt very good, it‚Äôs an ASUS TUF gaming motherboard, which doesn‚Äôt have enough M.2 ports nor SATA ports (so I use a HBA card), and would need to be upgraded anyway since I‚Äôd like to migrate over to Intel‚Äôs latest i9s (probably the 13900K). There are some nice (but hella expensive) server-grade motherboards available out there, especially SuperMicro‚Äôs (e.g. the <a href="https://www.supermicro.com/en/products/motherboard/x13sae">x13sae</a>), which meet the requirements. That might be what I‚Äôm going for.</p> <p>I‚Äôll also max out the RAM of this new motherboard/CPU pair (probably 128GB) with <a href="https://en.wikipedia.org/wiki/ECC_memory">ECC memory</a>. This <a href="https://en.wikipedia.org/wiki/Adaptive_replacement_cache">ARC</a> space would get rid of the use for L2ARC (for the quantity of data I currently have, anyway), which is nice.</p> <p>Finally, in the far-far-away future, I‚Äôd like to upgrade my server with bleeding-edge GPU accelerators (i.e. A100, H100), but huh‚Ä¶ 15K$ a module? No thanks.</p> <p>Thanks for reading! Hope to see you around for an update on the progress üòâ</p>]]></content><author><name></name></author><category term="self-hosting"/><category term="linux"/><category term="server"/><category term="sysadmin"/><summary type="html"><![CDATA[A former PC turned makeshift server? Times have changed ol' man, let's invest thousands into a proper cloud service!]]></summary></entry><entry><title type="html">Self-hosting Stable Diffusion on Windows</title><link href="https://lilian.boulard.fr/blog/2022/stable-diffusion-windows/" rel="alternate" type="text/html" title="Self-hosting Stable Diffusion on Windows"/><published>2022-09-07T18:13:00+00:00</published><updated>2022-09-07T18:13:00+00:00</updated><id>https://lilian.boulard.fr/blog/2022/stable-diffusion-windows</id><content type="html" xml:base="https://lilian.boulard.fr/blog/2022/stable-diffusion-windows/"><![CDATA[<blockquote class="block-warning"> <p>This blog post was written at a time before AUTOMATIC1111‚Äôs webui. Today, it is a much better choice.</p> <p>However, there are some use cases for using Stable Diffusion this way, so this post stays üòÉ</p> </blockquote> <p>This very short guide will show you how to run <a href="https://stability.ai/blog/stable-diffusion-announcement">Stable Diffusion</a> on Windows, and create images easily with a command-line interface.</p> <blockquote class="block-tip"> <p>The hardware specification provided by Stability AI still apply: as of writing these lines, that means you‚Äôll need a graphics card with at least 8GB of VRAM.</p> </blockquote> <h2 id="spin-up-the-docker-image">Spin up the docker image</h2> <p>First, install <a href="https://docs.docker.com/desktop/install/windows-install/">Docker Desktop</a>.</p> <p>Next, check the <a href="https://replicate.com/stability-ai/stable-diffusion">Replicate page</a> and use the command indicated in <em>Run on your own computer</em> to run a docker container with Stable Diffusion.</p> <p>For reference, as of writing these lines, the command is</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run -d -p 5000:5000 --gpus=all r8.im/stability-ai/stable-diffusion@sha256:a9758cbfbd5f3c2094457d996681af52552901775aa2d6dd0b17fd15df959bef
</code></pre></div></div> <h2 id="use-with-the-python-script-to-generate-images">Use with the Python script to generate images</h2> <p>I‚Äôve written a simple Python script to interface with the horrible Windows commands.</p> <p>To use it, install Python, and copy <a href="https://github.com/LilianBoulard/Stable-Diffusion-Windows/blob/main/stable_diffusion.py">the script</a> to your local machine.</p> <p>Next, install the script requirements:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python -m pip install requests
</code></pre></div></div> <p>Finally, run the script with the desired arguments:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python stable_diffusion.py -h
</code></pre></div></div> <p>Example of a prompt:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python stable_diffusion.py --prompt "a cat on a car"
</code></pre></div></div> <div class="row justify-content-center"> <div class="col-7 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/0-acatonacar-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/0-acatonacar-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/0-acatonacar-1400.webp"/> <img src="/assets/img/0-acatonacar.png" class="img-fluid" width="auto" height="auto" title="a cat on a car, generated by SD" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="bonus-disable-nsfw-filter">Bonus: disable NSFW filter</h2> <blockquote class="block-tip"> <p>This is specific to version 1.4. This might not work for future/previous versions.</p> </blockquote> <p>The NSFW filter will turn the image to solid black and display a warning if it is triggered.</p> <p>In order to disable this behavior, open a prompt in the container</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker exec -it &lt;container_name&gt; /bin/sh
</code></pre></div></div> <p>Next, install a text editor, such as <code class="language-plaintext highlighter-rouge">nano</code></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt update &amp;&amp; apt install nano
</code></pre></div></div> <p>use it to modify the file <code class="language-plaintext highlighter-rouge">/src/predict.py</code></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /src/predict.py
</code></pre></div></div> <p>Inside nano, use <code class="language-plaintext highlighter-rouge">Ctrl + W</code> to search for <code class="language-plaintext highlighter-rouge">output = self.pipe</code>.</p> <p>Right above, you‚Äôll want to add these lines:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">dummy_checker</span><span class="p">(</span><span class="n">images</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">images</span><span class="p">,</span> <span class="p">[</span><span class="bp">False</span><span class="p">]</span> <span class="o">*</span> <span class="nf">len</span><span class="p">(</span><span class="n">images</span><span class="p">)</span>
<span class="n">self</span><span class="p">.</span><span class="n">pipe</span><span class="p">.</span><span class="n">safety_checker</span> <span class="o">=</span> <span class="n">dummy_checker</span>
</code></pre></div></div> <p>You might also want to stop the safety model from even loading, which will save some VRAM (not tackled here).</p> <p>Restart the container, and you should be good to go !</p> <h1 id="final-thoughts">Final thoughts</h1> <p>After testing thoroughly Dall-E 2, Midjourney and Stable Diffusion, here are my thoughts:</p> <ul> <li>Dall-E and Stable Diffusion offer similar style of results, though Dall-E tends to be more in-line with what is being prompted from a standard user perspective (which is to be expected given that OpenAI is state of the art).</li> <li>Stable Diffusion has the big advantage of being free if you omit the fact that you need a 8GB+ graphics card (and ignore the electricity bill, that is). Self-hosted is very cool nonetheless. However, its results are not very impressive to me, compared to the mind-blowing results of Midjourney. <ul> <li>Update: the <a href="https://youtu.be/nVhmFski3vg">Two Minute Papers video</a> really shows what can be done if you really dive into the code (which might not be optimal with the setup described in this post), and it‚Äôs absolutely mind-blowing ! From a researcher / artist perspective, this is an absolutely amazing tool !</li> </ul> </li> <li><a href="https://www.midjourney.com/showcase/">Midjourney is extremely good at what it does</a>, even more since version 4 (which at the time of writing this is in test phase).</li> </ul> <p>So, if you have a good graphics card, try Stable Diffusion, it‚Äôs self-hosted, it doesn‚Äôt have quotas, you can do extremely advanced things with it: it‚Äôs very cool!</p> <p>You might also want to try experimenting with Dall-E 2 (though you‚Äôll need to be patient, given that access is controlled by a waitlist).</p> <p>Finally, my personal favorite is Midjourney, which you can try right now with 25 free images. Even after using these, the lowest tier is currently at 10 bucks for 200 GPU minutes, which is pretty cheap.</p> <p>If you want to use Midjourney, I‚Äôd also recommend the <a href="https://promptomania.com/midjourney-prompt-builder/">Midjourney prompt builder</a>!</p> <h1 id="references">References</h1> <p><a href="https://github.com/LilianBoulard/Stable-Diffusion-Windows">GitHub - LilianBoulard/Stable-Diffusion-Windows: Interface for self-hosting Stable Diffusion on Windows</a></p> <p><a href="https://replicate.com/stability-ai/stable-diffusion">Replicate</a></p> <p><a href="https://www.reddit.com/r/StableDiffusion/comments/wxba44/disable_hugging_face_nsfw_filter_in_three_step/">Disable Hugging Face NSFW filter in three step</a></p> <p><a href="https://promptomania.com/midjourney-prompt-builder/">promptoMANIA:: Midjourney prompt builder</a></p> <p><a href="https://youtu.be/nVhmFski3vg">Stable Diffusion: DALL-E 2 For Free, For Everyone!</a></p>]]></content><author><name></name></author><category term="stable-diffusion"/><category term="self-hosting"/><category term="windows"/><category term="github"/><summary type="html"><![CDATA[This very short guide will show you how to run Stable Diffusion on Windows, and create images easily with a command-line interface.]]></summary></entry></feed>